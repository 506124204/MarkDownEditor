<Controls:MetroWindow 
    x:Class="MarkDownEditor.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:MarkDownEditor"
    xmlns:view="clr-namespace:MarkDownEditor.View"
    xmlns:p="clr-namespace:MarkDownEditor.Properties"
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:MetroDialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:cefSharp="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf"
    mc:Ignorable="d"
    xmlns:vm="clr-namespace:MarkDownEditor.ViewModel"
    MetroDialog:DialogParticipation.Register="{Binding}"
    DataContext="{Binding Main,Source={StaticResource Locator}}"
    Title="{Binding Title}"
    Icon="../MarkdownEditorLogo.png"
    MinHeight="600"
    MinWidth="1000"
    Closing="MetroWindow_Closing"
    ShowTitleBar="True"
    WindowState="Maximized"
    GlowBrush="{DynamicResource AccentColorBrush}"
    NonActiveGlowBrush="#CDFF0000">
    
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <ToggleButton Content="{x:Static p:Resources.ShowPreview}" IsChecked="{Binding IsShowPreview}" IsEnabled="{Binding IsReadingMode,Converter={StaticResource OppositeConverter}}"></ToggleButton>
            <ToggleButton Content="{x:Static p:Resources.FullScreen}" IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=ToggleFullScreen}"></ToggleButton>
            <Button Content="{x:Static p:Resources.About}" Command="{Binding AboutViewModel.ShowAboutCommand}"></Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Controls:MetroWindow.InputBindings>
        <KeyBinding Gesture="Ctrl+N" Command="{Binding NewDocumentCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+O" Command="{Binding OpenDocumentCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+S" Command="{Binding SaveDocumentCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+Shift+S" Command="{Binding SaveAsDocumentCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+F" Command="{Binding FindReplaceViewModel.SwitchFindReplaceCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+B" Command="{Binding BoldCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+I" Command="{Binding ItalicCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+Q" Command="{Binding QuoteCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+K" Command="{Binding GeneralCodeCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+U" Command="{Binding UnorderedListCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+Shift+O" Command="{Binding OrderedListCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+H" Command="{Binding TitleCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+L" Command="{Binding HyperlinkCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+G" Command="{Binding ImageCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+R" Command="{Binding SeparateLineCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+Shift+D" Command="{Binding DateStampCommand}"></KeyBinding>
        <KeyBinding Gesture="Ctrl+T" Command="{Binding TimeStampCommand}"></KeyBinding>
        <KeyBinding Gesture="F5" Command="{Binding RefreshPreviewCommand}"></KeyBinding>
        <KeyBinding Gesture="F6" Command="{Binding ExternalBrowserCommand}"></KeyBinding>
    </Controls:MetroWindow.InputBindings>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout Position="Right" IsModal="True" Theme="Accent" Width="300" IsOpen="{Binding AboutViewModel.ShowAboutControl}">
                <view:AboutControl DataContext="{Binding AboutViewModel}"></view:AboutControl>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding SourceCodeWidth}"></ColumnDefinition>
                    <ColumnDefinition Width="{Binding PreviewWidth}"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <GroupBox Grid.Column="0" Header="MarkDown">

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Controls:MetroContentControl BorderBrush="Red" BorderThickness="2">
                            <view:EditorToolBarControl></view:EditorToolBarControl>
                        </Controls:MetroContentControl>
                        <Grid Grid.Row="1" Margin="10">
                            <view:MvvmTextEditor
                                SyntaxHighlighting="MarkDown"     
                                Document="{Binding SourceCode}"
                                SelectionStart="{Binding SelectionStart,Mode=TwoWay}"
                                SelectionLength="{Binding SelectionLength,Mode=TwoWay}"
                                CaretOffset="{Binding CaretOffset,Mode=TwoWay}"
                                ScrollOffsetRatio="{Binding ScrollOffsetRatio,Mode=OneWayToSource}"
                                CanUndo="{Binding CanUndo,Mode=OneWayToSource}"
                                CanRedo="{Binding CanRedo,Mode=OneWayToSource}"
                                ShowLineNumbers="{Binding SettingsViewModel.ShowLineNumbers}"
                                WordWrap="{Binding SettingsViewModel.WordWrap}"
                                ShowTabs="{Binding SettingsViewModel.ShowTabs}"
                                ShowSpaces="{Binding SettingsViewModel.ShowSpaces}"
                                ShowEndOfLine="{Binding SettingsViewModel.ShowEndOfLine}"
                                ShowColumnRuler="{Binding SettingsViewModel.ShowColumnRuler}"
                                RulerPosition="{Binding SettingsViewModel.RulerPosition}"
                                HighlightCurrentLine="{Binding SettingsViewModel.HighlightCurrentLine}"
                                LineNumbersForeground="{DynamicResource AccentColorBrush}"
                                FontFamily="{Binding SettingsViewModel.EditorFont}"
                                FontSize="{Binding SettingsViewModel.EditorFontSize}">
                                <view:MvvmTextEditor.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{x:Static p:Resources.Undo}" Command="Undo"></MenuItem>
                                        <MenuItem Header="{x:Static p:Resources.Redo}" Command="Redo"></MenuItem>
                                        <Separator></Separator>
                                        <MenuItem Header="{x:Static p:Resources.SelectAll}" Command="SelectAll"></MenuItem>
                                        <MenuItem Header="{x:Static p:Resources.Cut}" Command="Cut"></MenuItem>
                                        <MenuItem Header="{x:Static p:Resources.Copy}" Command="Copy"></MenuItem>
                                        <MenuItem Header="{x:Static p:Resources.Paste}" Command="Paste"></MenuItem>
                                        <MenuItem Header="{x:Static p:Resources.Delete}" Command="Delete"></MenuItem>
                                        <Separator></Separator>
                                        <MenuItem Header="{x:Static p:Resources.FindReplace}" 
                                                  Command="{Binding FindReplaceViewModel.SwitchFindReplaceCommand}"
                                                  IsCheckable="True"
                                                  IsChecked="{Binding Binding FindReplaceViewModel.ShowFindReplaceControl}"
                                                  InputGestureText="Ctrl+F"></MenuItem>
                                        <Separator></Separator>
                                        <MenuItem Header="{x:Static p:Resources.Format}" Command="{Binding FormatCodeCommand}"></MenuItem>
                                    </ContextMenu>
                                </view:MvvmTextEditor.ContextMenu>
                            </view:MvvmTextEditor>
                            <Border HorizontalAlignment="Right" VerticalAlignment="Top">
                                <view:FindReplaceControl DataContext="{Binding FindReplaceViewModel}"></view:FindReplaceControl>
                            </Border>
                        </Grid>
                        
                        
                        <Expander Grid.Row="3" ExpandDirection="Up">
                            <Expander.Header>
                                <TextBlock Margin="5" Text="{x:Static p:Resources.SETTINGS}" Foreground="{StaticResource WhiteBrush}"></TextBlock>
                            </Expander.Header>
                            <view:SettingsControl DataContext="{Binding SettingsViewModel}" Height="250"></view:SettingsControl>
                        </Expander>
                    </Grid>
                </GroupBox>
                <Grid Grid.Column="1">
                    <GroupBox Header="{x:Static p:Resources.Preview}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <view:PreviewToolBarControl Margin="5" HorizontalAlignment="Right">
                            </view:PreviewToolBarControl>
                            <view:MvvmChromiumWebBrowser
                                Grid.Row="1" Margin="10"
                                ShouldReload="{Binding ShouldReload,Mode=TwoWay}"
                                ScrollOffsetRatio="{Binding ScrollOffsetRatio,Mode=TwoWay}"
                                Address="{Binding PreviewSource}" IsBrowserInitialized="{Binding IsBrowserInitialized,Mode=OneWayToSource}"></view:MvvmChromiumWebBrowser>
                        </Grid>
                    </GroupBox>
                </Grid>
            </Grid>
            <Border Margin="35">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="ExitFullScreenButton" Grid.Row="0" Grid.Column="1"  Padding="5" 
                            BorderThickness="5" Opacity="0.6" Click="ExitFullScreenButton_Click"
                            Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}, Path=ToggleFullScreen,Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel>
                            <TextBlock Text="{x:Static p:Resources.Exit}" FontSize="20" FontWeight="Bold" HorizontalAlignment="Center"></TextBlock>
                            <TextBlock Text="{x:Static p:Resources.FullScreen}" FontSize="10" HorizontalAlignment="Center"></TextBlock>
                        </StackPanel>
                    </Button>
                </Grid>
            </Border>
        </Grid>
        <StatusBar Grid.Row="2" x:Name="statusBar" FontSize="12">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <StatusBarItem Grid.Column="0">
                <Controls:TransitioningContentControl Transition="Down" Content="{Binding StatusBarText}"></Controls:TransitioningContentControl>
            </StatusBarItem>

            <StatusBarItem Grid.Column="2" Content="{Binding CurrentCaretStatisticsInfo}">
            </StatusBarItem>
            <Separator Grid.Column="3" Margin="10,0,10,0"/>
            <StatusBarItem Grid.Column="4" Content="{Binding DocumrntStatisticsInfo}">
            </StatusBarItem>
            <Separator Grid.Column="5" Margin="10,0,10,0"/>
            <StatusBarItem Grid.Column="6">
                <ComboBox ItemsSource="{Binding MarkDownType.Keys}" FontSize="12" BorderThickness="0"
                          SelectedItem="{Binding CurrentMarkdownTypeText}"
                          Background="{DynamicResource AccentColorBrush3}"
                          Foreground="{DynamicResource WhiteBrush}">
                </ComboBox>
            </StatusBarItem>
            <StatusBarItem Grid.Column="7">
                <ComboBox ItemsSource="{Binding AllLanguages}" FontSize="12" BorderThickness="0"
                          SelectedItem="{Binding CultureInfo}"
                          DisplayMemberPath="NativeName"
                          Background="{DynamicResource AccentColorBrush3}"
                          Foreground="{DynamicResource WhiteBrush}">
                </ComboBox>
            </StatusBarItem>
            <StatusBarItem Grid.Column="8">
                <Menu FontSize="12"
                      Background="{DynamicResource AccentColorBrush}"
                      Foreground="{DynamicResource WhiteBrush}">
                    <MenuItem Header="{x:Static p:Resources.Accent}" BorderThickness="0"
                              ItemsSource="{Binding AccentColors, Mode=OneWay}"                              
                              Background="{DynamicResource AccentColorBrush}"
                              Foreground="{DynamicResource WhiteBrush}">
                        <MenuItem.Resources>
                            <Ellipse x:Key="AccentMenuIcon"
                                 x:Shared="False"
                                 Width="16"
                                 Height="16"
                                 Fill="{Binding ColorBrush, Mode=OneWay}" />
                        </MenuItem.Resources>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                                <Setter Property="Command" Value="{Binding ChangeAccentCommand}" />
                                <Setter Property="Icon" Value="{StaticResource AccentMenuIcon}" />
                                <Setter Property="Header" Value="{Binding Name, Mode=OneWay}" />
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </Menu>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Controls:MetroWindow>
